{"version":3,"file":"ngx-strings.js","sources":["ng://ngx-strings/lib/ngx-strings.service.ts","ng://ngx-strings/lib/ngx-strings.component.ts","ng://ngx-strings/lib/directives/uppercase.directive.ts","ng://ngx-strings/lib/directives/lowercase.directive.ts","ng://ngx-strings/lib/directives/titlecase.directive.ts","ng://ngx-strings/lib/directives/initialcase.directive.ts","ng://ngx-strings/lib/directives/linelimit.directive.ts","ng://ngx-strings/lib/directives/stringcut.directive.ts","ng://ngx-strings/lib/directives/emailcut.directive.ts","ng://ngx-strings/lib/directives/replacer.directive.ts","ng://ngx-strings/lib/ngx-strings.module.ts","ng://ngx-strings/public-api.ts","ng://ngx-strings/ngx-strings.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxStringsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-strings',\n  template: `\n    <p>\n      ngx-strings works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxStringsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[ngxUpperCase]'\n})\nexport class UppercaseDirective {\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.renderer.setStyle(this.el.nativeElement, 'text-transform', 'uppercase');\n  }\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[ngxLowerCase]'\n})\nexport class LowercaseDirective {\n \n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.renderer.setStyle(this.el.nativeElement, 'text-transform', 'lowercase');\n  }\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[ngxTitleCase]'\n})\nexport class TitlecaseDirective {\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.renderer.setStyle(this.el.nativeElement, 'text-transform', 'capitalize');\n  }\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[ngxInitialCase]'\n})\nexport class InitialcaseDirective {\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.renderer.setStyle(this.el.nativeElement, 'text-transform', 'initial');\n  }\n\n}\n","import { Directive, ElementRef, Renderer2, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[ngxLineLimit]'\n})\nexport class LinelimitDirective implements OnInit {\n\n  @Input() lines: string;\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n\n  }\n  ngOnInit() {\n    this.renderer.setStyle(this.el.nativeElement, 'overflow', 'hidden');\n    this.renderer.setStyle(this.el.nativeElement, 'display', '-webkit-box');\n    this.renderer.setStyle(this.el.nativeElement, '-webkit-line-clamp', this.lines);\n    this.renderer.setStyle(this.el.nativeElement, '-webkit-box-orient', 'vertical');\n  }\n\n}\n","import { Directive, Input, ElementRef, Renderer2, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[ngxStringSlicer]'\n})\nexport class StringcutDirective implements OnInit {\n\n  @Input() start: number;\n  @Input() end: number;\n  @Input() overflow: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n\n  }\n  ngOnInit() {\n    let actualText: string;\n    actualText = this.el.nativeElement.textContent;\n    actualText = actualText.slice(this.start, this.end)\n    if (this.overflow === true) {\n      this.el.nativeElement.textContent = actualText + \"...\";\n    } else {\n      this.el.nativeElement.textContent = actualText;\n    }\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[ngxEmailSlicer]'\n})\nexport class EmailcutDirective {\n\n  @Input() invalid: string;\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n\n  }\n  ngOnInit() {\n    let actualText: string;\n    this.invalid = this.invalid ? this.invalid : 'Invalid Email!';\n    actualText = this.el.nativeElement.textContent;\n    if (actualText.includes('@') && actualText.includes('.')) {\n      let email = actualText.split('@');\n      let pre = '';\n      let post = '';\n      pre = email[0].trim();\n      post = email[1].trim();\n      pre = pre.slice(0, -5);\n      post = post.substr(1, post.length);\n      this.el.nativeElement.textContent = pre + '****' + post;\n    } else {\n      this.el.nativeElement.textContent = this.invalid;\n      this.renderer.setStyle(this.el.nativeElement, 'color', 'crimson');\n      this.renderer.setStyle(this.el.nativeElement, 'font-weight', 'bold');\n    }\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[ngxStringReplacer]'\n})\nexport class ReplacerDirective {\n\n  @Input() from: string;\n  @Input() to: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n\n  }\n  ngOnInit() {\n    let find = this.from;\n    let re = new RegExp(find, 'g');\n\n    let actualText: string;\n    actualText = this.el.nativeElement.textContent;\n    actualText = actualText.replace(re, this.to);\n    this.el.nativeElement.textContent = actualText;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxStringsComponent } from './ngx-strings.component';\nimport { UppercaseDirective } from './directives/uppercase.directive';\nimport { LowercaseDirective } from './directives/lowercase.directive';\nimport { TitlecaseDirective } from './directives/titlecase.directive';\nimport { InitialcaseDirective } from './directives/initialcase.directive';\nimport { LinelimitDirective } from './directives/linelimit.directive';\nimport { StringcutDirective } from './directives/stringcut.directive';\nimport { EmailcutDirective } from './directives/emailcut.directive';\nimport { ReplacerDirective } from './directives/replacer.directive';\n\n\n\n@NgModule({\n  declarations: [\n    NgxStringsComponent,\n    UppercaseDirective,\n    LowercaseDirective,\n    TitlecaseDirective,\n    InitialcaseDirective,\n    LinelimitDirective,\n    StringcutDirective,\n    EmailcutDirective,\n    ReplacerDirective],\n  imports: [\n  ],\n  exports: [\n    NgxStringsComponent,\n    UppercaseDirective,\n    LowercaseDirective,\n    TitlecaseDirective,\n    InitialcaseDirective,\n    LinelimitDirective,\n    StringcutDirective,\n    EmailcutDirective,\n    ReplacerDirective]\n})\nexport class NgxStringsModule { }\n","/*\n * Public API Surface of ngx-strings\n */\n\nexport * from './lib/ngx-strings.service';\nexport * from './lib/ngx-strings.component';\nexport * from './lib/ngx-strings.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {EmailcutDirective as ɵg} from './lib/directives/emailcut.directive';\nexport {InitialcaseDirective as ɵd} from './lib/directives/initialcase.directive';\nexport {LinelimitDirective as ɵe} from './lib/directives/linelimit.directive';\nexport {LowercaseDirective as ɵb} from './lib/directives/lowercase.directive';\nexport {ReplacerDirective as ɵh} from './lib/directives/replacer.directive';\nexport {StringcutDirective as ɵf} from './lib/directives/stringcut.directive';\nexport {TitlecaseDirective as ɵc} from './lib/directives/titlecase.directive';\nexport {UppercaseDirective as ɵa} from './lib/directives/uppercase.directive';"],"names":[],"mappings":"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"}